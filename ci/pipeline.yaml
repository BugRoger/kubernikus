post_failure_to_slack: &post_failure_to_slack
  put: slack-alert
  params:
    channel: '#kubernikus'
    username: 'Concourse'
    icon_emoji: ':airplane:'
    silent: 'true'
    text: |
      :boom: <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job #$BUILD_NAME failed>

resources:
  - name: kubernikus.git
    type: git
    source:
      username: sapcc-bot
      password: ((github-com-access-token))
      uri:    https://github.com/sapcc/kubernikus.git
      branch: master

  - name: secrets.git
    type: git
    source:
      uri:         git@github.wdf.sap.corp:cc/secrets.git
      private_key: ((secrets-ssh-key))
      branch:      master

  - name: kubernikus.version
    type: time-version-resource
    source:
      prefix: v
      property_name: VERSION

  - name: kubernikus-binaries.image
    type: docker-image
    source:
      repository: sapcc/kubernikus-binaries
      username:   ((docker-hub-username))
      password:   ((docker-hub-password))

  - name: kubernikus.image
    type: docker-image
    source:
      repository: sapcc/kubernikus
      username:   ((docker-hub-username))
      password:   ((docker-hub-password))

  - name: kubernikusctl.image
    type: docker-image
    source:
      repository: sapcc/kubernikusctl
      username:   ((docker-hub-username))
      password:   ((docker-hub-password))

  - name: kubernikus-kubectl.image
    type: docker-image
    source:
      repository: sapcc/kubernikus-kubectl
      username:   ((docker-hub-username))
      password:   ((docker-hub-password))


  - name: slack-alert
    type: slack-notification
    source:
      url: {{slack-webhook-url}}

resource_types:
  - name: time-version-resource
    type: docker-image
    source:
      repository: hub.global.cloud.sap/d062392/time-version-resource
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

jobs:
  - name: build
    serial: true
    on_failure:
      <<: *post_failure_to_slack
    plan:
      - aggregate:
        - get: kubernikus.git
          trigger: true
        - get: kubernikus.version

      - put: kubernikus-binaries.image
        params:
          build: kubernikus.git
          dockerfile: kubernikus.git/Dockerfile.kubernikus-binaries
          tag: kubernikus.version/version
          build_args_file: kubernikus.version/properties.json
          tag_as_latest: true
          cache: false 
          build_args:
            http_proxy: http://proxy.phl.sap.corp:8080
            https_proxy: http://proxy.phl.sap.corp:8080
            no_proxy: sap.corp,cloud.sap,127.0.0.1,localhost
        get_params:
          skip_download: true

      - aggregate:
        - put: kubernikus.image
          params:
            build: kubernikus.git
            dockerfile: kubernikus.git/Dockerfile.kubernikus
            tag: kubernikus.version/version
            build_args_file: kubernikus.version/properties.json
            tag_as_latest: true
            cache: true 
            cache_tag: latest
            build_args:
              http_proxy: http://proxy.phl.sap.corp:8080
              https_proxy: http://proxy.phl.sap.corp:8080
              no_proxy: sap.corp,cloud.sap,127.0.0.1,localhost
          get_params:
            skip_download: true
        - put: kubernikusctl.image
          params:
            build: kubernikus.git
            dockerfile: kubernikus.git/Dockerfile.kubernikusctl
            tag: kubernikus.version/version
            build_args_file: kubernikus.version/properties.json
            tag_as_latest: true
            build_args:
              http_proxy: http://proxy.phl.sap.corp:8080
              https_proxy: http://proxy.phl.sap.corp:8080
              no_proxy: sap.corp,cloud.sap,127.0.0.1,localhost
          get_params:
            skip_download: true
        - put: kubernikus-kubectl.image
          params:
            build: kubernikus.git/contrib/kubernikus-kubectl
            tag: kubernikus.version/version
            build_args_file: kubernikus.version/properties.json
            tag_as_latest: true
            cache: true 
            cache_tag: latest
            build_args:
              http_proxy: http://proxy.phl.sap.corp:8080
              https_proxy: http://proxy.phl.sap.corp:8080
              no_proxy: sap.corp,cloud.sap,127.0.0.1,localhost
          get_params:
            skip_download: true

  - name: admin-staging
    serial: true
    plan:
      - aggregate:
        - get: kubernikus.git
          trigger: true
          passed: [build]
        - get: kubernikus.version
          passed: [build]
        - get: secrets.git
      - task: deploy
        file: kubernikus.git/ci/task-helm-upgrade-admin.yaml
        params:
          REGION: admin
          RELEASE: kubernikus-staging
          NAMESPACE: kubernikus-staging
          GITHUB_TOKEN: ((github-access-token))
    on_failure:
      <<: *post_failure_to_slack

  - name: k-staging
    serial: true
    plan:
      - aggregate:
        - get: kubernikus.git
          trigger: true
          passed: [build]
        - get: kubernikus.version
          passed: [build]
        - get: secrets.git
      - task: deploy
        file: kubernikus.git/ci/task-helm-upgrade-kubernikus.yaml
        params:
          NAMESPACE: kubernikus-system
          RELEASE: kubernikus
          OS_AUTH_URL: https://identity-3.staging.cloud.sap/v3
          OS_USERNAME: {{kubernikus-staging-username}}
          OS_PASSWORD: {{kubernikus-staging-password}}
          OS_USER_DOMAIN_NAME: monsoon3
          OS_PROJECT_NAME: kubernikus
          OS_PROJECT_DOMAIN_NAME: ccadmin
          KUBERNIKUS_NAME: k-staging
          KUBERNIKUS_URL: https://kubernikus-staging.admin.cloud.sap
    on_failure:
      <<: *post_failure_to_slack

  - name: eu-nl-1
    serial: true
    plan:
      - aggregate:
        - get: kubernikus.git
          trigger: true
          passed: [staging]
        - get: kubernikus.version
          passed: [staging]
        - get: secrets.git

      - task: deploy
        file: kubernikus.git/ci/task-helm-upgrade.yaml
        params:
          REGION: eu-nl-1
          RELEASE: kubernikus
          NAMESPACE: kube-system
          GITHUB_TOKEN: ((github-access-token))
      - task: prune replicasets
        file: kubernikus.git/ci/prune-replicasets.yaml
        params:
          REGION: eu-nl-1
          NAMESPACE: kube-system 
          GITHUB_TOKEN: {{github-access-token}}
    on_failure:
      <<: *post_failure_to_slack

  # Add new regions above this line, but note that you need to do a
  # manual `helm install` first. This pipeline can only `helm upgrade`.
  # When the pipeline is up and running, set the image tag to
  # `DEFINED_BY_PIPELINE` so that a manual `helm upgrade` fails cleanly
  # and points the user to the pipeline.
